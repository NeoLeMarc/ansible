# vim: expandtab : filetype=yaml : nospell : ai : sw=2 : ts=2:
# https://kubernetes.io/blog/2019/03/15/kubernetes-setup-using-ansible-and-vagrant/
- hosts: kubernetes
  remote_user: root 
  roles:
    - role: postfix-sattelite
    - role: basic-server
      ssh_allow_users: "AllowUsers root@10.10.* marcel@10.10.* deploy@10.10.*"
    - role: unixuser
      unix_username: marcel
      unix_user_gecos: Marcel Noe
    - role: unixuser
      unix_username: deploy
      unix_user_gecos: Deploy User
  tasks:
   - name: remove password requirements for sudo on user marcel
     lineinfile:
       path: /etc/sudoers
       line: "marcel   ALL=(ALL:ALL) NOPASSWD: ALL"

   - name: prerequisites for apt over https
     apt:
       pkg:
         - apt-transport-https
         - ca-certificates
         - curl
         - gnupg-agent
         - software-properties-common

   - name: add repo key for Docker
     apt_key:
       url: https://download.docker.com/linux/debian/gpg
       state: present

   - name: add repo for docker
     apt_repository:
       repo: deb [arch=amd64] https://download.docker.com/linux/debian buster stable
       state: present

   - name: Install docker
     apt:
       pkg:
         - docker-ce
         - docker-ce-cli
         - containerd.io

   - name: add repo key for kubernetes
     apt_key:
       url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
       state: present

   - name: add kubernetes package repos 
     apt_repository:
         repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
         state: present

   - name: add kubernetes basic packages
     apt: 
        pkg:
        - kubelet
        - kubeadm
        - kubectl
        update_cache: yes

   - name: remove swap from fstab 
     mount:
       name: "{{ item }}"
       fstype: swap
       state: absent
     with_items:
       - swap
       - none

   - name: Disable swap
     command: swapoff -a
     when: ansible_swaptotal_mb > 0 

   - name: does kubelet config exist?
     stat:
       path: /etc/default/kubelet
     register: stat_kubelet_config

   - name: Configure node ip in kubelet cfg if file exists
     lineinfile:
       path: /etc/default/kubelet
       line: KUBELET_EXTRA_ARGS\=--node-ip={{ node_ip }}
     notify: Restart kubelet
     when: stat_kubelet_config.stat.exists

   - name: Create file otherwise
     copy: 
        dest: /etc/default/kubelet
        content: KUBELET_EXTRA_ARGS\=--node-ip={{ node_ip }}
        mode: 644
     notify: Restart kubelet
     when: not stat_kubelet_config.stat.exists

   - name: does kubernetes apiserver config exist?
     stat:
       path: /etc/kubernetes/manifests/kube-apiserver.yaml
     register: stat_kubernetes_apiserver_config

   - name: Initialize the Kubernetes cluster using kubeadm
     command: kubeadm init --apiserver-advertise-address\=\"{{ node_ip }}\" --apiserver-cert-extra-sans\=\"{{ node_ip }}\" --node-name {{ inventory_hostname_short }} --pod-network-cidr\=10.12.0.0/16
     when: inventory_hostname in groups['kubernetes_master'] and
           not stat_kubernetes_apiserver_config.stat.exists

   - name: does kubernetes admin config exist for user marcel?
     stat:
       path: /home/marcel/.kube/config
     register: stat_kubernetes_admin_config

   - name: Setup kubeconfig for marcel user
     command: "{{ item }}"
     with_items:
       - mkdir -p /home/marcel/.kube
       - cp /etc/kubernetes/admin.conf /home/marcel/.kube/config
       - chown -R marcel:marcel /home/marcel/.kube
     when: inventory_hostname in groups["kubernetes_master"] and not stat_kubernetes_admin_config.stat.exists

   - name: has CNI already be installed?
     become: true
     become_user: marcel
     shell: kubectl get pods -n calico-system | grep calico 
     register: cni_install_status
     when: inventory_hostname in groups["kubernetes_master"]
     ignore_errors: yes

   - name: Install calico pod network
     become: true
     become_user: marcel
     command: kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml
     when: inventory_hostname in groups["kubernetes_master"] and cni_install_status.rc > 0

   - name: upload custome-ressources for calico
     become: true
     become_user: marcel
     copy:
       dest: /home/marcel/custom-resources.yaml
       src: files/kubernetes/custom-resources.yaml
     when: inventory_hostname in groups["kubernetes_master"] and cni_install_status.rc > 0

   - name: apply custom ressources
     become: true
     become_user: marcel
     command: kubectl create -f /home/marcel/custom-resources.yaml 
     when: inventory_hostname in groups["kubernetes_master"] and cni_install_status.rc > 0



   - name: Generate join command
     command: kubeadm token create --print-join-command
     register: join_command
     when: inventory_hostname in groups["kubernetes_master"]

   - name: Copy join command to local file
     local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"
     when: inventory_hostname in groups["kubernetes_master"]

   - name: copy join command to worker nodes
     copy: src=join-command dest=/tmp/join-command.sh mode=0777
     when: inventory_hostname in groups["kubernetes_worker"]

   - name: change cgroups driver to systemd - remove old line
     lineinfile:
       path: /etc/containerd/config.toml
       line: "plugins.cri.systemd_cgroup = true"
       state: absent
     notify: Restart containerd

   - name: change cgroups driver to systemd - add new lines 1
     lineinfile:
       path: /etc/containerd/config.toml
       line: "[plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc.options]"
       state: present 
     notify: Restart containerd

   - name: change cgroups driver to systemd - add new lines 2
     lineinfile:
       path: /etc/containerd/config.toml
       line: "SystemdCgroup = true"
       state: present 
       insertafter: "[plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc.options]"
     notify: Restart containerd


   - name: ensure docker is running
     service: 
        name: docker.service
        enabled: yes
        state: started

   - name: does kubernetes kubelet config exist?
     stat:
       path: /etc/kubernetes/kubelet.conf
     register: stat_kubernetes_kubelet_config

   - name: Join
     command: sh /tmp/join-command.sh
     when: inventory_hostname in groups["kubernetes_worker"] and not stat_kubernetes_kubelet_config.stat.exists

  handlers:
   - name: Restart kubelet
     service:
         name: kubelet
         daemon_reload: yes
         state: restarted

   - name: Restart containerd
     service:
          name: containerd
          daemon_reload: yes
          state: restarted

